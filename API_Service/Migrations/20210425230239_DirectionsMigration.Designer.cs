// <auto-generated />
using System;
using API_Service.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace API_Service.Migrations
{
    [DbContext(typeof(SmartHomeDbContext))]
    [Migration("20210425230239_DirectionsMigration")]
    partial class DirectionsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("API_Service.Models.Admin", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("username");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("API_Service.Models.Chamber", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("Clientemail")
                        .HasColumnType("text");

                    b.HasKey("name");

                    b.HasIndex("Clientemail");

                    b.ToTable("chambers");
                });

            modelBuilder.Entity("API_Service.Models.Client", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("continent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("last_name1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("last_name2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("email");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("API_Service.Models.Device", b =>
                {
                    b.Property<int>("serial_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DeviceTypename")
                        .HasColumnType("text");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("electric_usage")
                        .HasColumnType("integer");

                    b.HasKey("serial_number");

                    b.HasIndex("DeviceTypename");

                    b.ToTable("devices");
                });

            modelBuilder.Entity("API_Service.Models.DeviceType", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("warranty_months")
                        .HasColumnType("integer");

                    b.HasKey("name");

                    b.ToTable("device_types");
                });

            modelBuilder.Entity("API_Service.Models.DirectionClient", b =>
                {
                    b.Property<string>("direction")
                        .HasColumnType("text");

                    b.Property<string>("Clientemail")
                        .HasColumnType("text");

                    b.HasKey("direction");

                    b.HasIndex("Clientemail");

                    b.ToTable("directions_clients");
                });

            modelBuilder.Entity("API_Service.Models.Distributor", b =>
                {
                    b.Property<int>("legal_card")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("continent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("legal_card");

                    b.ToTable("distributors");
                });

            modelBuilder.Entity("API_Service.Models.Order", b =>
                {
                    b.Property<int>("consecutive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Clientemail")
                        .HasColumnType("text");

                    b.Property<int?>("Deviceserial_number")
                        .HasColumnType("integer");

                    b.Property<int>("bill_number")
                        .HasColumnType("integer");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<DateTime>("purchase_date")
                        .HasColumnType("Date");

                    b.Property<string>("purchase_time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("consecutive");

                    b.HasIndex("Clientemail");

                    b.HasIndex("Deviceserial_number");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("DeviceDistributor", b =>
                {
                    b.Property<int>("devicesserial_number")
                        .HasColumnType("integer");

                    b.Property<int>("distributorslegal_card")
                        .HasColumnType("integer");

                    b.HasKey("devicesserial_number", "distributorslegal_card");

                    b.HasIndex("distributorslegal_card");

                    b.ToTable("DeviceDistributor");
                });

            modelBuilder.Entity("API_Service.Models.Chamber", b =>
                {
                    b.HasOne("API_Service.Models.Client", null)
                        .WithMany("chambers")
                        .HasForeignKey("Clientemail");
                });

            modelBuilder.Entity("API_Service.Models.Device", b =>
                {
                    b.HasOne("API_Service.Models.DeviceType", null)
                        .WithMany("devices")
                        .HasForeignKey("DeviceTypename");
                });

            modelBuilder.Entity("API_Service.Models.DirectionClient", b =>
                {
                    b.HasOne("API_Service.Models.Client", null)
                        .WithMany("directions")
                        .HasForeignKey("Clientemail");
                });

            modelBuilder.Entity("API_Service.Models.Order", b =>
                {
                    b.HasOne("API_Service.Models.Client", null)
                        .WithMany("orders")
                        .HasForeignKey("Clientemail");

                    b.HasOne("API_Service.Models.Device", null)
                        .WithMany("orders")
                        .HasForeignKey("Deviceserial_number");
                });

            modelBuilder.Entity("DeviceDistributor", b =>
                {
                    b.HasOne("API_Service.Models.Device", null)
                        .WithMany()
                        .HasForeignKey("devicesserial_number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Service.Models.Distributor", null)
                        .WithMany()
                        .HasForeignKey("distributorslegal_card")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Service.Models.Client", b =>
                {
                    b.Navigation("chambers");

                    b.Navigation("directions");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("API_Service.Models.Device", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("API_Service.Models.DeviceType", b =>
                {
                    b.Navigation("devices");
                });
#pragma warning restore 612, 618
        }
    }
}
